package com.dns.taxchina.ui;import netlib.util.AppUtil;import netlib.util.PhoneUtil;import netlib.util.TouchUtil;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import android.os.Handler;import android.text.TextUtils;import android.view.View;import android.webkit.WebChromeClient;import android.webkit.WebView;import android.widget.ImageView;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.Toast;import com.dns.taxchina.R;import com.dns.taxchina.service.db.CollectDBUtil;import com.dns.taxchina.service.model.BaseItemModel;import com.dns.taxchina.ui.constant.LoginBroadcastConstant;import com.dns.taxchina.ui.widget.WebViewPlug;import com.dns.taxchina.ui.widget.WebViewPlug.LoadWebViewListener;/** * @author henzil * @version create time:2014-4-24_下午5:31:39 * @Description 详情页 */public class DetailActivity extends BaseActivity {	private WebView webView;	protected WebViewPlug plug;	protected ProgressBar progressBar;	private String url = "file:///android_asset/index.html";	private BaseItemModel model;	private boolean isCollected;	private ImageView star;	private TextView back, title;	protected Handler mHandler = new Handler();	private CollectDBUtil collectUtil = null;	private String packageName, titleStr;	private LoginBroadReciever loginBroadReciever;	public static final String DETAIL_MODEL = "detail_model";	public static final String DETAIL_TITLE = "detail_title";	@Override	protected void initData() {		packageName = AppUtil.getPackageName(DetailActivity.this);		IntentFilter filter = new IntentFilter(packageName + LoginBroadcastConstant.LOGIN_INTENT_FILTER);		loginBroadReciever = new LoginBroadReciever();		registerReceiver(loginBroadReciever, filter);		collectUtil = CollectDBUtil.getInstance(DetailActivity.this, PhoneUtil.getIMEI(DetailActivity.this));		plug = new WebViewPlug(this);		model = (BaseItemModel) getIntent().getSerializableExtra(DETAIL_MODEL);		titleStr = getIntent().getStringExtra(DETAIL_TITLE);		titleStr = TextUtils.isEmpty(titleStr) ? "精品课程" : titleStr;		url = model.getUrl();		super.initData();	}	@Override	protected void initViews() {		setContentView(R.layout.activity_detail);		back = (TextView) findViewById(R.id.back_text);		TouchUtil.createTouchDelegate(back, 30);		star = (ImageView) findViewById(R.id.collection_btn);		webView = (WebView) findViewById(R.id.web_view);		title = (TextView) findViewById(R.id.title_text);		progressBar = (ProgressBar) findViewById(R.id.progress_bar);				webView.setWebChromeClient(new WebChromeClient() {			public void onProgressChanged(WebView view, int progress) {				progressBar.setProgress(progress);				if (progress == 100) {					mHandler.postDelayed(new Runnable() {						@Override						public void run() {							progressBar.setVisibility(View.GONE);						}					}, 300);				} else {					progressBar.setVisibility(View.VISIBLE);				}			}		});				plug.webViewPlug(url, webView, model);		title.setText(TextUtils.isEmpty(model.getDetailTitle()) ? "" : model.getDetailTitle());		if (collectUtil.isExistCourse(model.getId())) {			star.setImageResource(R.drawable.collection_h);			isCollected = true;			// update			collectUtil.saveCourse(model);		} else {			star.setImageResource(R.drawable.collection_n);			isCollected = false;		}	}	@Override	protected void initWidgetActions() {		back.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				finish();			}		});		star.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				if (isCollected) {					collectUtil.removeCourse(model.getId());					star.setImageResource(R.drawable.collection_n);					Toast.makeText(DetailActivity.this, getString(R.string.cancel_collect_success), Toast.LENGTH_SHORT).show();				} else {					collectUtil.saveCourse(model);					star.setImageResource(R.drawable.collection_h);					Toast.makeText(DetailActivity.this, getString(R.string.collect_success), Toast.LENGTH_SHORT).show();				}				isCollected = !isCollected;			}		});		plug.setLoadWebViewListener(new LoadWebViewListener() {			@Override			public void onPageFinished() {			}			@Override			public void onPageError() {			}		});	}	// 登录结束后操作广播	public class LoginBroadReciever extends BroadcastReceiver {		@Override		public void onReceive(Context context, Intent intent) {			Bundle bundle = intent.getExtras();			int isLoginBundle = bundle.getInt(LoginBroadcastConstant.IS_LOGIN_BUNDLE_KEY, -1);			switch (isLoginBundle) {			case LoginBroadcastConstant.LOGIN_SUCCESS_TAG:				plug.webViewPlug(url, webView, model);				break;			case LoginBroadcastConstant.LOGIN_FAIL_TAG:				break;			default:				break;			}		}	}	@Override	protected void onDestroy() {		super.onDestroy();		unregisterReceiver(loginBroadReciever);	}	@Override	protected void showNetDialog() {		if (AppUtil.isActivityTopStartThisProgram(this, DetailActivity.class.getName())) {			netDialog.show();		}	}}