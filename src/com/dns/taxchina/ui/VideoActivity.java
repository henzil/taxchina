package com.dns.taxchina.ui;import android.app.Activity;import android.app.ProgressDialog;import android.content.DialogInterface;import android.content.DialogInterface.OnKeyListener;import android.media.MediaPlayer;import android.media.MediaPlayer.OnCompletionListener;import android.media.MediaPlayer.OnErrorListener;import android.media.MediaPlayer.OnPreparedListener;import android.net.Uri;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.KeyEvent;import android.widget.MediaController;import android.widget.Toast;import android.widget.VideoView;import com.dns.taxchina.R;/** * @author henzil * @version 创建时间：2013-6-7 下午5:38:50 * @Description 视频播放类。 *//***** * http://my.eoe.cn/nmbb/archive/1132.html *  * http://my.eoe.cn/nmbb/archive/1203.html?f_section=similar * */public class VideoActivity extends Activity {	private VideoView mVideoView;	private ProgressDialog progressDialog;	private MediaController controller;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.video_activity);		progressDialog = new ProgressDialog(this);		progressDialog.setMessage(getString(R.string.play_please_wait));		progressDialog.setCancelable(false);		progressDialog.setOnKeyListener(new OnKeyListener() {			@Override			public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {				if (keyCode == KeyEvent.KEYCODE_BACK) {					finish();				}				return true;			}		});		progressDialog.show();		mVideoView = (VideoView) findViewById(R.id.surface_view);		Uri pathUri = this.getIntent().getData();//		Log.e("tag", "pathUri.toString() = "+pathUri.toString());//		String url = "http://mediamotiononline.ios.internapcdn.net/mediamotiononline/inapcms/CMS16042/flash/16042_adaptive2.mp4.m3u8";//		String url = "http://test1.ps.cn/raindropMh/data/userImg/3/video/1_l.m3u8";//		Uri pathUri = Uri.parse(url);		mVideoView.setVideoURI(pathUri);		mVideoView.setOnPreparedListener(new OnPreparedListener() {			@Override			public void onPrepared(MediaPlayer mp) {				mp.start();			}		});		// =======================		mVideoView.setOnCompletionListener(new OnCompletionListener() {			@Override			public void onCompletion(MediaPlayer player) {				mHandler.sendEmptyMessageDelayed(0, 100);			}		});		mVideoView.setOnErrorListener(new OnErrorListener() {			@Override			public boolean onError(MediaPlayer player, int position, int id) {				mHandler.removeMessages(1);				Toast.makeText(getApplicationContext(), getString(R.string.play_error), Toast.LENGTH_SHORT).show();				mHandler.sendEmptyMessageDelayed(0, 100);				return true;			}		});		controller = new MediaController(this);		mVideoView.setMediaController(controller);		mVideoView.requestFocus();//		mVideoView.start();		mHandler.sendEmptyMessageDelayed(1, 200);	}	private Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case 0:				if (progressDialog != null && progressDialog.isShowing()) {					progressDialog.dismiss();				}				finish();				break;			case 1:				if (mVideoView != null && mVideoView.isPlaying() && mVideoView.getCurrentPosition() > 0) {					if (progressDialog != null && progressDialog.isShowing()) {						progressDialog.dismiss();					}				} else {					mHandler.removeMessages(1);					mHandler.sendEmptyMessageDelayed(1, 200);				}				break;			default:				break;			}		}	};	@Override	protected void onDestroy() {		super.onDestroy();		mHandler.removeMessages(1);	};}